dist: trusty
sudo: required
matrix:
  include:    
    - stage: test
      language: java
      addons:
      apt:
        sources:
          - google-chrome
        packages:
          - google-chrome-stable
      jdk: oraclejdk8
      node_js:
        - 6
      before_install:
        - export CHROME_BIN=chromium-browser
        - export DISPLAY=:99.0
        - sh -e /etc/init.d/xvfb start
      script:
        - PHOTOMY_URL="https://www.photomy.si/" nightwatch . -o /tmp/nwreports

    - stage: build
      if: branch = master
      language: bash
      script:
        - docker build . -t meemaw/photomy:latest
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push meemaw/photomy:latest

    - stage: build
      if: tag IS present AND tag =~ ^backend-v.*$
      language: bash
      script:
        - RELEASE_TAG=$(echo $TRAVIS_TAG | cut -d 'v' -f 2)
        - echo "Building docker image version:" $RELEASE_TAG
        - docker build . -t meemaw/photomy:$RELEASE_TAG
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - echo "Pushing docker image version:" $RELEASE_TAG
        - docker push meemaw/photomy:$RELEASE_TAG

    - stage: deploy
      if: tag IS present AND tag =~ ^frontend-v.*$
      language: node_js
      node_js:
        - "node"
      before_script:
        - RELEASE_TAG=$(echo $TRAVIS_TAG | cut -d 'v' -f 2)
        - echo "Deploying frontend version:" $RELEASE_TAG
        - cd frontend
        - 'echo "export const VERSION_INFO = { tag: ''$RELEASE_TAG'', branch: ''$TRAVIS_BRANCH'', commit: ''$TRAVIS_COMMIT'' }" > ./src/version.js'
        - yarn install
        - sudo pip install --upgrade pip
        - sudo pip install awscli
      cache:
        yarn: true
        directories:
          - $HOME/.npm
      script:
        - gulp setProd
        - yarn build
        - aws s3 sync build s3://photomy.si --delete
      after_success:
        - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
      

stages:
  - test
  - build
  - deploy
  